{"version":3,"file":"static/js/897.53590d24.chunk.js","mappings":"kJAIAA,KAAKC,KAAK,aAAa,MACrBC,eAAgBA,IAAM,CAAC,kBAAmB,mBAAoB,iBAC9DC,kBAAmBA,IAAM,WAG3BH,KAAKC,KACH,mBACA,MACEG,MAAO,QACPC,MAAMC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SAAE,sBAEV,CAAEC,SAAS,IAGbT,KAAKC,KACH,oBACA,MACEG,MAAO,MACPC,MAAMC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SAAE,qBAEV,CAAEC,SAAS,IAGbT,KAAKC,KACH,iBACA,MACEG,MAAO,UACPC,MAAMC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SAAE,0BAEV,CAAEC,SAAS,IAGbT,KAAKC,KAAK,oBAAoB,MAC5BS,KAAMC,IAAA,IAAC,UAAEC,EAAS,GAAEC,EAAE,SAAEL,GAAUG,EAAA,OAChCL,EAAAA,EAAAA,KAAA,KAAGM,UAAWA,EAAWE,KAAMD,EAAGL,SAC/BA,GACC,MAIRO,KAAK,oBAAoBC,UACvB,MAAM,UAAEC,EAAS,UAAEC,EAAS,WAAEC,IAAeC,EAAAA,EAAAA,KAAOd,EAAAA,EAAAA,KAACe,EAAAA,QAAI,CAACT,UAAU,cAE9DU,QAAeH,EAAW,UAChCI,OAAOD,EAAOE,eAAeC,YAAY,UAEzC,MAAMC,QAAgBP,EAAW,mBACjCI,OAAOG,GAASD,YAAY,UAAW,cAEvC,MAAME,EAAST,EAAU,oBACzBK,OAAOI,GAAQF,YAAY,UAE3B,MAAMG,EAAYV,EAAU,gBAC5BK,OAAOK,GAAWC,oBAElB,MAAMC,EAAOb,EAAUc,WACvBR,OAAOO,GAAMD,oBACbN,OAAOO,GAAML,YAAY,OAAQ,MAAO,OAAO,IAGjDV,KAAK,gDAAgDC,UACnD,MAAM,WAAEG,IAAeC,EAAAA,EAAAA,KAAOd,EAAAA,EAAAA,KAACe,EAAAA,QAAI,CAACW,KAAK,OAEzCT,aAAaJ,EAAW,WAAWU,oBACnCN,aAAaJ,EAAW,oBAAoBU,oBAE5C,MAAMI,QAAiBd,EAAW,KAClCI,OAAOU,EAASnB,MAAMoB,KAAK,GAAGC,EAAAA,EAAOC,OAAOC,SAASvB,SAErD,MAAMwB,QAAanB,EAAW,KAC9BI,OAAOe,EAAKxB,MAAMoB,KAAK,GAAGC,EAAAA,EAAOC,OAAOC,SAASvB,QAAQ,IAG3DC,KAAK,iDAAiDC,UACpD,MAAM,WAAEG,IAAeC,EAAAA,EAAAA,KAAOd,EAAAA,EAAAA,KAACe,EAAAA,QAAI,CAACW,KAAK,OAEzCT,aAAaJ,EAAW,SAASU,oBACjCN,aAAaJ,EAAW,mBAAmBU,oBAE3C,MAAMI,QAAiBd,EAAW,KAClCI,OAAOU,EAASnB,MAAMoB,KAAK,GAAGC,EAAAA,EAAOC,OAAOC,SAASvB,SAErD,MAAMwB,QAAanB,EAAW,KAC9BI,OAAOe,EAAKxB,MAAMoB,KAAK,GAAGC,EAAAA,EAAOC,OAAOC,SAASvB,QAAQ,IAG3DC,KAAK,8CAA8CC,UACjD,MAAM,WAAEG,IAAeC,EAAAA,EAAAA,KAAOd,EAAAA,EAAAA,KAACe,EAAAA,QAAI,CAACW,KAAK,OAEzCT,aAAaJ,EAAW,aAAaU,oBACrCN,aAAaJ,EAAW,wBAAwBU,oBAEhD,MAAMI,QAAiBd,EAAW,KAClCI,OAAOU,EAASnB,MAAMoB,KAAK,GAAGC,EAAAA,EAAOC,OAAOC,SAASvB,SAErD,MAAMwB,QAAanB,EAAW,KAC9BI,OAAOe,EAAKxB,MAAMoB,KAAK,GAAGC,EAAAA,EAAOC,OAAOC,SAASvB,QAAQ,IAG3DC,KAAK,oDAAoDC,UACvD,MAAM,WAAEG,IAAeC,EAAAA,EAAAA,KAAOd,EAAAA,EAAAA,KAACe,EAAAA,QAAI,CAACW,KAAK,QAEzCT,aAAaJ,EAAW,WAAWU,oBACnCN,aAAaJ,EAAW,oBAAoBU,oBAE5C,MAAMI,QAAiBd,EAAW,KAClCI,OAAOU,EAASnB,MAAMoB,KAAK,GAAGC,EAAAA,EAAOC,OAAOC,SAASvB,SAErD,MAAMwB,QAAanB,EAAW,KAC9BI,OAAOe,EAAKxB,MAAMoB,KAAK,GAAGC,EAAAA,EAAOC,OAAOC,SAASvB,QAAQ,IAG3DC,KAAK,oDAAoDC,UACvD,MAAM,WAAEG,IAAeC,EAAAA,EAAAA,KAAOd,EAAAA,EAAAA,KAACe,EAAAA,QAAI,CAACW,KAAK,SAEzCT,aAAaJ,EAAW,aAAaU,oBACrCN,aAAaJ,EAAW,wBAAwBU,oBAEhD,MAAMI,QAAiBd,EAAW,KAClCI,OAAOU,EAASnB,MAAMoB,KAAK,GAAGC,EAAAA,EAAOC,OAAOC,SAASvB,SAErD,MAAMwB,QAAanB,EAAW,KAC9BI,OAAOe,EAAKxB,MAAMoB,KAAK,GAAGC,EAAAA,EAAOC,OAAOC,SAASvB,QAAQ,G","sources":["Book.test.js"],"sourcesContent":["import React from \"react\"\r\nimport { render } from \"@testing-library/react\"\r\nimport Book from \"./Book\"\r\n\r\njest.mock(\"./BookAPI\", () => ({\r\n  fetchBookPages: () => [\"./book/00-start\", \"./book/50-middle\", \"./book/99-end\"],\r\n  selectRandomTheme: () => \"Test\",\r\n}))\r\n\r\njest.mock(\r\n  \"./book/00-start\",\r\n  () => ({\r\n    title: \"hello\",\r\n    body: <>this is a test</>,\r\n  }),\r\n  { virtual: true }\r\n)\r\n\r\njest.mock(\r\n  \"./book/50-middle\",\r\n  () => ({\r\n    title: \"hey\",\r\n    body: <>halfway there</>,\r\n  }),\r\n  { virtual: true }\r\n)\r\n\r\njest.mock(\r\n  \"./book/99-end\",\r\n  () => ({\r\n    title: \"goodbye\",\r\n    body: <>hope all went well</>,\r\n  }),\r\n  { virtual: true }\r\n)\r\n\r\njest.mock(\"react-router-dom\", () => ({\r\n  Link: ({ className, to, children }) => (\r\n    <a className={className} href={to}>\r\n      {children}\r\n    </a>\r\n  ),\r\n}))\r\n\r\ntest(\"renders Book box\", async () => {\r\n  const { container, getByText, findByText } = render(<Book className=\"Box Test\" />)\r\n\r\n  const header = await findByText(/hello/i)\r\n  expect(header.parentElement).toHaveClass(\"Header\")\r\n\r\n  const content = await findByText(/this is a test/i)\r\n  expect(content).toHaveClass(\"Content\", \"Theme-Test\")\r\n\r\n  const footer = getByText(/2020â€”\\d{4}/i)\r\n  expect(footer).toHaveClass(\"Footer\")\r\n\r\n  const timestamp = getByText(/00:00:\\d{2}/i)\r\n  expect(timestamp).toBeInTheDocument()\r\n\r\n  const book = container.firstChild\r\n  expect(book).toBeInTheDocument()\r\n  expect(book).toHaveClass(\"Book\", \"Box\", \"Test\")\r\n})\r\n\r\ntest(\"render Book pages navigation buttons (start)\", async () => {\r\n  const { findByText } = render(<Book page=\"0\" />)\r\n\r\n  expect(await findByText(/hello/i)).toBeInTheDocument()\r\n  expect(await findByText(/this is a test/i)).toBeInTheDocument()\r\n\r\n  const previous = await findByText(\"<\")\r\n  expect(previous.href).toBe(`${global.window.location.href}0`)\r\n\r\n  const next = await findByText(\">\")\r\n  expect(next.href).toBe(`${global.window.location.href}1`)\r\n})\r\n\r\ntest(\"render Book pages navigation buttons (middle)\", async () => {\r\n  const { findByText } = render(<Book page=\"1\" />)\r\n\r\n  expect(await findByText(/hey/i)).toBeInTheDocument()\r\n  expect(await findByText(/halfway there/i)).toBeInTheDocument()\r\n\r\n  const previous = await findByText(\"<\")\r\n  expect(previous.href).toBe(`${global.window.location.href}0`)\r\n\r\n  const next = await findByText(\">\")\r\n  expect(next.href).toBe(`${global.window.location.href}2`)\r\n})\r\n\r\ntest(\"render Book pages navigation buttons (end)\", async () => {\r\n  const { findByText } = render(<Book page=\"2\" />)\r\n\r\n  expect(await findByText(/goodbye/i)).toBeInTheDocument()\r\n  expect(await findByText(/hope all went well/i)).toBeInTheDocument()\r\n\r\n  const previous = await findByText(\"<\")\r\n  expect(previous.href).toBe(`${global.window.location.href}1`)\r\n\r\n  const next = await findByText(\">\")\r\n  expect(next.href).toBe(`${global.window.location.href}2`)\r\n})\r\n\r\ntest(\"render Book pages navigation buttons (clamp min)\", async () => {\r\n  const { findByText } = render(<Book page=\"-1\" />)\r\n\r\n  expect(await findByText(/hello/i)).toBeInTheDocument()\r\n  expect(await findByText(/this is a test/i)).toBeInTheDocument()\r\n\r\n  const previous = await findByText(\"<\")\r\n  expect(previous.href).toBe(`${global.window.location.href}0`)\r\n\r\n  const next = await findByText(\">\")\r\n  expect(next.href).toBe(`${global.window.location.href}1`)\r\n})\r\n\r\ntest(\"render Book pages navigation buttons (clamp max)\", async () => {\r\n  const { findByText } = render(<Book page=\"999\" />)\r\n\r\n  expect(await findByText(/goodbye/i)).toBeInTheDocument()\r\n  expect(await findByText(/hope all went well/i)).toBeInTheDocument()\r\n\r\n  const previous = await findByText(\"<\")\r\n  expect(previous.href).toBe(`${global.window.location.href}1`)\r\n\r\n  const next = await findByText(\">\")\r\n  expect(next.href).toBe(`${global.window.location.href}2`)\r\n})\r\n"],"names":["jest","mock","fetchBookPages","selectRandomTheme","title","body","_jsx","_Fragment","children","virtual","Link","_ref","className","to","href","test","async","container","getByText","findByText","render","Book","header","expect","parentElement","toHaveClass","content","footer","timestamp","toBeInTheDocument","book","firstChild","page","previous","toBe","global","window","location","next"],"sourceRoot":""}