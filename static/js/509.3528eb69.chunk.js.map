{"version":3,"file":"static/js/509.3528eb69.chunk.js","mappings":"kJAIA,MAAMA,EAAc,CAClBC,KAAM,gBACNC,IAAK,YACLC,GAAI,2CAENC,KAAKC,KAAK,sBAAsB,MAASL,kBAEzCM,KAAK,oBAAoB,KACvB,MAAM,UAAEC,IAAcC,EAAAA,EAAAA,KAAOC,EAAAA,EAAAA,KAACC,EAAAA,QAAI,CAACC,UAAU,cAEvCC,EAAOL,EAAUM,WACvBC,OAAOF,GAAMG,oBACbD,OAAOF,GAAMI,YAAY,OAAQ,MAAO,OAAO,IAGjDV,KAAK,mBAAmB,KACtB,MAAM,WAAEW,IAAeT,EAAAA,EAAAA,KAAOC,EAAAA,EAAAA,KAACC,EAAAA,QAAI,KAE7BQ,EAAUD,EAAW,WAC3BH,OAAOI,GAASH,oBAChBD,OAAOI,GAASC,gBAAgB,eAAgB,gBAChDL,OAAOI,GAASE,IAAIC,mBAAmB,IAGzCf,KAAK,8BAA8B,KACjC,MAAMgB,EAAQ,iBAER,WAAEL,IAAeT,EAAAA,EAAAA,KAAOC,EAAAA,EAAAA,KAACC,EAAAA,QAAI,CAACY,MAAOA,KAErCJ,EAAUD,EAAW,WAC3BH,OAAOI,GAASH,oBAChBD,OAAOI,GAASC,gBAAgB,eAAgB,aAAaG,OAC7DR,OAAOI,GAASE,IAAIC,mBAAmB,IAGzCf,KAAK,yEAAyE,KAC5E,MAAM,UAAEiB,IAAcf,EAAAA,EAAAA,KAAOC,EAAAA,EAAAA,KAACC,EAAAA,QAAI,KAE5BT,EAAOsB,EAAUvB,EAAYC,MACnCa,OAAOb,GAAMc,oBACbD,OAAOb,GAAMkB,gBAAgB,YAAa,QAE1C,MAAMjB,EAAMqB,EAAUvB,EAAYE,KAClCY,OAAOZ,GAAKa,oBACZD,OAAOZ,GAAKiB,gBAAgB,YAAa,OAEzC,MAAMhB,EAAKoB,EAAUvB,EAAYG,IACjCW,OAAOX,GAAIY,oBACXD,OAAOX,GAAIgB,gBAAgB,YAAa,KAAK,IAG/Cb,KAAK,qEAAqE,KACxE,MAAMkB,EAAS,CACbvB,KAAM,qBACNC,IAAK,sBACLC,GAAI,mBAGA,UAAEoB,IAAcf,EAAAA,EAAAA,KAAOC,EAAAA,EAAAA,KAACC,EAAAA,QAAI,IAAKc,KAEjCvB,EAAOsB,EAAUC,EAAOvB,MAC9Ba,OAAOb,GAAMc,oBACbD,OAAOb,GAAMkB,gBAAgB,YAAa,QAE1C,MAAMjB,EAAMqB,EAAUC,EAAOtB,KAC7BY,OAAOZ,GAAKa,oBACZD,OAAOZ,GAAKiB,gBAAgB,YAAa,OAEzC,MAAMhB,EAAKoB,EAAUC,EAAOrB,IAC5BW,OAAOX,GAAIY,oBACXD,OAAOX,GAAIgB,gBAAgB,YAAa,KAAK,G","sources":["Code.test.js"],"sourcesContent":["import React from \"react\"\r\nimport { render } from \"@testing-library/react\"\r\nimport Code from \"./Code\"\r\n\r\nconst placeholder = {\r\n  html: `<body></body>`,\r\n  css: `body { };`,\r\n  js: `//one-line comment for testing purposes`,\r\n}\r\njest.mock(\"./code/placeholder\", () => ({ placeholder }))\r\n\r\ntest(\"renders Code box\", () => {\r\n  const { container } = render(<Code className=\"Box Test\" />)\r\n\r\n  const code = container.firstChild\r\n  expect(code).toBeInTheDocument()\r\n  expect(code).toHaveClass(\"Code\", \"Box\", \"Test\")\r\n})\r\n\r\ntest(\"renders CodePen\", () => {\r\n  const { getByTitle } = render(<Code />)\r\n\r\n  const codepen = getByTitle(\"codepen\")\r\n  expect(codepen).toBeInTheDocument()\r\n  expect(codepen).toHaveAttribute(\"data-prefill\", `{\"title\":\"\"}`)\r\n  expect(codepen).not.toHaveTextContent()\r\n})\r\n\r\ntest(\"renders CodePen with title\", () => {\r\n  const title = \"Hello, World!\"\r\n\r\n  const { getByTitle } = render(<Code title={title} />)\r\n\r\n  const codepen = getByTitle(\"codepen\")\r\n  expect(codepen).toBeInTheDocument()\r\n  expect(codepen).toHaveAttribute(\"data-prefill\", `{\"title\":\"${title}\"}`)\r\n  expect(codepen).not.toHaveTextContent()\r\n})\r\n\r\ntest(\"renders CodePen with default placeholder prefill for html, css and js\", () => {\r\n  const { getByText } = render(<Code />)\r\n\r\n  const html = getByText(placeholder.html)\r\n  expect(html).toBeInTheDocument()\r\n  expect(html).toHaveAttribute(\"data-lang\", \"html\")\r\n\r\n  const css = getByText(placeholder.css)\r\n  expect(css).toBeInTheDocument()\r\n  expect(css).toHaveAttribute(\"data-lang\", \"css\")\r\n\r\n  const js = getByText(placeholder.js)\r\n  expect(js).toBeInTheDocument()\r\n  expect(js).toHaveAttribute(\"data-lang\", \"js\")\r\n})\r\n\r\ntest(\"renders CodePen with custom provided prefill for html, css and js\", () => {\r\n  const custom = {\r\n    html: `<div>welcome</div>`,\r\n    css: `div {color: purple}`,\r\n    js: `alert('hello')`,\r\n  }\r\n\r\n  const { getByText } = render(<Code {...custom} />)\r\n\r\n  const html = getByText(custom.html)\r\n  expect(html).toBeInTheDocument()\r\n  expect(html).toHaveAttribute(\"data-lang\", \"html\")\r\n\r\n  const css = getByText(custom.css)\r\n  expect(css).toBeInTheDocument()\r\n  expect(css).toHaveAttribute(\"data-lang\", \"css\")\r\n\r\n  const js = getByText(custom.js)\r\n  expect(js).toBeInTheDocument()\r\n  expect(js).toHaveAttribute(\"data-lang\", \"js\")\r\n})\r\n"],"names":["placeholder","html","css","js","jest","mock","test","container","render","_jsx","Code","className","code","firstChild","expect","toBeInTheDocument","toHaveClass","getByTitle","codepen","toHaveAttribute","not","toHaveTextContent","title","getByText","custom"],"sourceRoot":""}