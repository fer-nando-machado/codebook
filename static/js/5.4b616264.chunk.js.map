{"version":3,"sources":["Code.test.js"],"names":["placeholder","html","css","js","jest","mock","test","code","render","className","container","firstChild","expect","toBeInTheDocument","toHaveClass","codepen","getByTitle","toHaveAttribute","not","toHaveTextContent","title","getByText","custom"],"mappings":"sJAIMA,EAAc,CAClBC,KAAK,gBACLC,IAAI,YACJC,GAAG,2CAELC,KAAKC,KAAK,sBAAsB,iBAAO,CAAEL,cAAT,IAEhCM,KAAK,oBAAoB,WACvB,IAEMC,EAFgBC,YAAO,cAAC,UAAD,CAAMC,UAAU,cAArCC,UAEeC,WACvBC,OAAOL,GAAMM,oBACbD,OAAOL,GAAMO,YAAY,OAAQ,MAAO,OACzC,IAEDR,KAAK,mBAAmB,WACtB,IAEMS,GAAUC,EAFOR,YAAO,cAAC,UAAD,KAAtBQ,YAEmB,WAC3BJ,OAAOG,GAASF,oBAChBD,OAAOG,GAASE,gBAAgB,eAAhC,gBACAL,OAAOG,GAASG,IAAIC,mBACrB,IAEDb,KAAK,8BAA8B,WACjC,IAAMc,EAAQ,gBAIRL,GAAUC,EAFOR,YAAO,cAAC,UAAD,CAAMY,MAAOA,KAAnCJ,YAEmB,WAC3BJ,OAAOG,GAASF,oBAChBD,OAAOG,GAASE,gBAAgB,eAAhC,oBAA6DG,EAA7D,OACAR,OAAOG,GAASG,IAAIC,mBACrB,IAEDb,KAAK,yEAAyE,WAC5E,IAAQe,EAAcb,YAAO,cAAC,UAAD,KAArBa,UAEFpB,EAAOoB,EAAUrB,EAAYC,MACnCW,OAAOX,GAAMY,oBACbD,OAAOX,GAAMgB,gBAAgB,YAAa,QAE1C,IAAMf,EAAMmB,EAAUrB,EAAYE,KAClCU,OAAOV,GAAKW,oBACZD,OAAOV,GAAKe,gBAAgB,YAAa,OAEzC,IAAMd,EAAKkB,EAAUrB,EAAYG,IACjCS,OAAOT,GAAIU,oBACXD,OAAOT,GAAIc,gBAAgB,YAAa,KACzC,IAEDX,KAAK,qEAAqE,WACxE,IAAMgB,EAAS,CACbrB,KAAK,qBACLC,IAAI,sBACJC,GAAG,kBAGGkB,EAAcb,YAAO,cAAC,UAAD,eAAUc,KAA/BD,UAEFpB,EAAOoB,EAAUC,EAAOrB,MAC9BW,OAAOX,GAAMY,oBACbD,OAAOX,GAAMgB,gBAAgB,YAAa,QAE1C,IAAMf,EAAMmB,EAAUC,EAAOpB,KAC7BU,OAAOV,GAAKW,oBACZD,OAAOV,GAAKe,gBAAgB,YAAa,OAEzC,IAAMd,EAAKkB,EAAUC,EAAOnB,IAC5BS,OAAOT,GAAIU,oBACXD,OAAOT,GAAIc,gBAAgB,YAAa,KACzC,G","file":"static/js/5.4b616264.chunk.js","sourcesContent":["import React from \"react\"\r\nimport { render } from \"@testing-library/react\"\r\nimport Code from \"./Code\"\r\n\r\nconst placeholder = {\r\n  html: `<body></body>`,\r\n  css: `body { };`,\r\n  js: `//one-line comment for testing purposes`,\r\n}\r\njest.mock(\"./code/placeholder\", () => ({ placeholder }))\r\n\r\ntest(\"renders Code box\", () => {\r\n  const { container } = render(<Code className=\"Box Test\" />)\r\n\r\n  const code = container.firstChild\r\n  expect(code).toBeInTheDocument()\r\n  expect(code).toHaveClass(\"Code\", \"Box\", \"Test\")\r\n})\r\n\r\ntest(\"renders CodePen\", () => {\r\n  const { getByTitle } = render(<Code />)\r\n\r\n  const codepen = getByTitle(\"codepen\")\r\n  expect(codepen).toBeInTheDocument()\r\n  expect(codepen).toHaveAttribute(\"data-prefill\", `{\"title\":\"\"}`)\r\n  expect(codepen).not.toHaveTextContent()\r\n})\r\n\r\ntest(\"renders CodePen with title\", () => {\r\n  const title = \"Hello, World!\"\r\n\r\n  const { getByTitle } = render(<Code title={title} />)\r\n\r\n  const codepen = getByTitle(\"codepen\")\r\n  expect(codepen).toBeInTheDocument()\r\n  expect(codepen).toHaveAttribute(\"data-prefill\", `{\"title\":\"${title}\"}`)\r\n  expect(codepen).not.toHaveTextContent()\r\n})\r\n\r\ntest(\"renders CodePen with default placeholder prefill for html, css and js\", () => {\r\n  const { getByText } = render(<Code />)\r\n\r\n  const html = getByText(placeholder.html)\r\n  expect(html).toBeInTheDocument()\r\n  expect(html).toHaveAttribute(\"data-lang\", \"html\")\r\n\r\n  const css = getByText(placeholder.css)\r\n  expect(css).toBeInTheDocument()\r\n  expect(css).toHaveAttribute(\"data-lang\", \"css\")\r\n\r\n  const js = getByText(placeholder.js)\r\n  expect(js).toBeInTheDocument()\r\n  expect(js).toHaveAttribute(\"data-lang\", \"js\")\r\n})\r\n\r\ntest(\"renders CodePen with custom provided prefill for html, css and js\", () => {\r\n  const custom = {\r\n    html: `<div>welcome</div>`,\r\n    css: `div {color: purple}`,\r\n    js: `alert('hello')`,\r\n  }\r\n\r\n  const { getByText } = render(<Code {...custom} />)\r\n\r\n  const html = getByText(custom.html)\r\n  expect(html).toBeInTheDocument()\r\n  expect(html).toHaveAttribute(\"data-lang\", \"html\")\r\n\r\n  const css = getByText(custom.css)\r\n  expect(css).toBeInTheDocument()\r\n  expect(css).toHaveAttribute(\"data-lang\", \"css\")\r\n\r\n  const js = getByText(custom.js)\r\n  expect(js).toBeInTheDocument()\r\n  expect(js).toHaveAttribute(\"data-lang\", \"js\")\r\n})\r\n"],"sourceRoot":""}