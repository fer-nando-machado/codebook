{"version":3,"file":"static/js/653.479a3212.chunk.js","mappings":"mJAIAA,KAAKC,KAAK,UAAU,IAAMC,IAAA,IAAC,UAAEC,GAAWD,EAAA,OAAKE,EAAAA,EAAAA,KAAA,OAAKD,UAAWA,EAAUE,SAAC,QAAU,IAClFL,KAAKC,KAAK,UAAU,IAAMK,IAAA,IAAC,UAAEH,GAAWG,EAAA,OAAKF,EAAAA,EAAAA,KAAA,OAAKD,UAAWA,EAAUE,SAAC,QAAU,IAElFE,KAAK,eAAe,KAClB,MAAM,UAAEC,EAAS,UAAEC,IAAcC,EAAAA,EAAAA,KAAON,EAAAA,EAAAA,KAACO,EAAAA,QAAG,KAEtCC,EAAMJ,EAAUK,WACtBC,OAAOF,GAAKG,oBAEZ,MAAMC,EAAOP,EAAU,SACvBK,OAAOE,GAAMC,YAAY,cAEzB,MAAMC,EAAOT,EAAU,SACvBK,OAAOI,GAAMD,YAAY,aAAa,G","sources":["App.test.js"],"sourcesContent":["import React from \"react\"\r\nimport { render } from \"@testing-library/react\"\r\nimport App from \"./App\"\r\n\r\njest.mock(\"./Book\", () => ({ className }) => <div className={className}>Book</div>)\r\njest.mock(\"./Code\", () => ({ className }) => <div className={className}>Code</div>)\r\n\r\ntest(\"renders App\", () => {\r\n  const { container, getByText } = render(<App />)\r\n\r\n  const app = container.firstChild\r\n  expect(app).toBeInTheDocument()\r\n\r\n  const book = getByText(/Book/i)\r\n  expect(book).toHaveClass(\"Box Single\")\r\n\r\n  const code = getByText(/Code/i)\r\n  expect(code).toHaveClass(\"Box Double\")\r\n})\r\n"],"names":["jest","mock","_ref","className","_jsx","children","_ref2","test","container","getByText","render","App","app","firstChild","expect","toBeInTheDocument","book","toHaveClass","code"],"sourceRoot":""}