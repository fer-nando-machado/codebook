"use strict";(self.webpackChunkcodebook=self.webpackChunkcodebook||[]).push([[509],{509:(e,t,o)=>{o.r(t);o(5043);var s=o(6004),c=o(7239),n=o(579);const l={html:"<body></body>",css:"body { };",js:"//one-line comment for testing purposes"};jest.mock("./code/placeholder",(()=>({placeholder:l}))),test("renders Code box",(()=>{const{container:e}=(0,s.XX)((0,n.jsx)(c.default,{className:"Box Test"})),t=e.firstChild;expect(t).toBeInTheDocument(),expect(t).toHaveClass("Code","Box","Test")})),test("renders CodePen",(()=>{const{getByTitle:e}=(0,s.XX)((0,n.jsx)(c.default,{})),t=e("codepen");expect(t).toBeInTheDocument(),expect(t).toHaveAttribute("data-prefill",'{"title":""}'),expect(t).not.toHaveTextContent()})),test("renders CodePen with title",(()=>{const e="Hello, World!",{getByTitle:t}=(0,s.XX)((0,n.jsx)(c.default,{title:e})),o=t("codepen");expect(o).toBeInTheDocument(),expect(o).toHaveAttribute("data-prefill",`{"title":"${e}"}`),expect(o).not.toHaveTextContent()})),test("renders CodePen with default placeholder prefill for html, css and js",(()=>{const{getByText:e}=(0,s.XX)((0,n.jsx)(c.default,{})),t=e(l.html);expect(t).toBeInTheDocument(),expect(t).toHaveAttribute("data-lang","html");const o=e(l.css);expect(o).toBeInTheDocument(),expect(o).toHaveAttribute("data-lang","css");const a=e(l.js);expect(a).toBeInTheDocument(),expect(a).toHaveAttribute("data-lang","js")})),test("renders CodePen with custom provided prefill for html, css and js",(()=>{const e={html:"<div>welcome</div>",css:"div {color: purple}",js:"alert('hello')"},{getByText:t}=(0,s.XX)((0,n.jsx)(c.default,{...e})),o=t(e.html);expect(o).toBeInTheDocument(),expect(o).toHaveAttribute("data-lang","html");const l=t(e.css);expect(l).toBeInTheDocument(),expect(l).toHaveAttribute("data-lang","css");const a=t(e.js);expect(a).toBeInTheDocument(),expect(a).toHaveAttribute("data-lang","js")}))}}]);
//# sourceMappingURL=509.3528eb69.chunk.js.map